require_relative "drawer"

class MathDrawer
	
	def initialize d
		@drawer = d
	end
	
	def line a, b
		@drawer.line 0,b,-b/a,0
	end

	def draw_sqrt_function_graph a, b, c
		#drawing the top of the graph:
		x = -b / 2 * a
		draw_sqrt_function_point(a, b, c, x)
		#drawing some other points:
		draw_points(a, b, c, x, 1)
		draw_lines(a, b, c, x, 1)
		draw_points(a, b, c, x, -1)
		draw_lines(a, b, c, x, -1)	
	end
private
	def find_y a, b, c, x
		y = a * (x * x) + b * x + c
	end
	def draw_sqrt_function_point a, b, c, x
		@drawer.point(x * 10, find_y(a, b, c, x) * 10)
	end

	def draw_points a, b, c, x, i
		5.times do
			x += i
			draw_sqrt_function_point(a, b, c, x)
		end
	end

	def draw_lines a, b, c, x1, i
		5.times do
			x2 = x1
			y1 = find_y(a, b, c, x1)
			x2 += i
			y2 = find_y(a, b, c, x2)
			@drawer.line(x1 * 10, y1 * 10, x2 * 10, y2 * 10)
			x1 = x2
		end
	end
end

d = Drawer.new "math.svg", 350,300
d.start
d.cs

m = MathDrawer.new d
m.draw_sqrt_function_graph 1, 6, 5

d.finish

